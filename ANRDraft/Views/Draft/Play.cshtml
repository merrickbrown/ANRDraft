@model ANRDraft.Models.ParticipantViewModel

@{
    ViewBag.Title = "View";
}
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        var draftname = @Html.Raw(Json.Encode(Model.DraftName));
        var playername = @Html.Raw(Json.Encode(Model.Name));

        $(function () {
            var $currentPack = $('#currentPack');
            var updatePack = function(draft) {
                draft.server.getCurrentPack(draftname, playername).done(function (cards){
                    $currentPack.empty();
                    $.each(cards, function(i, card) {
                        var $img = $(document.createElement('img'));
                        var ID = card.ID;
                        $img.attr('id', ID);
                        $img.attr('src', card.Data.ImageUri);
                        $img.attr('alt', card.Data.Title);
                        $img.attr('class', "cardimage");
                        $img.dblclick(function () {
                            $currentPack.hide();
                            draft.server.trySelectCard(draftname, playername, ID).done(
                            function () {
                                updatePack(draft);
                                $currentPack.show();
                            }
                            );
                        });
                        $currentPack.prepend($img);
                    });
                });
            }
            // Reference the auto-generated proxy for the hub.
            var draft = $.connection.draftHub;
            // Create a function that the hub can call back to display messages.
            draft.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            //create a notification when a new round has started
            draft.client.newRound = function () { 
                alert('a new round has started!');
                updatePack(draft);
            };
            //
            draft.client.newPack = function (name) {
                if(playername == name) {
                    updatePack(draft);
                }
            }
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                draft.server.joinDraft(draftname);
                updatePack(draft);
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    draft.server.newChatMessage(draftname,playername, $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}

<h2>View</h2>
<div id="currentPack"></div>


<div class="container">
    <input type="text" id="message" />
    <input type="button" id="sendmessage" value="Send" />
    <ul id="discussion"></ul>
</div>