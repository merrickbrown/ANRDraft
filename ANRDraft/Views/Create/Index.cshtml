
@model ANRDraft.Models.DraftCreateModel


<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
    <script language="javascript" type="text/javascript">
        function addRow() {


            var index = $("#tbNames").children("tr").length;

            var indexCell = "<td style='display:none'><input name='Names.Index' type='hidden' value='" + index + "' /></td>";
            var titleCell = "<td><input id='Names_" + index + "' name='Names[" + index + "]' type='text' class='form-control'/></td>";
            var removeCell = "<td><button id='btnAddName' class='btn btn-sm btn-outline-warning' type='button' onclick='removeRow(" + index + ");'>Remove</button></td>";

            var newRow = "<tr id='trName" + index + "'>" +
            indexCell + titleCell + removeCell + "</tr>";
            $("#tbNames").append(newRow);
        }

        function removeRow(id) {
            var controlToBeRemoved = "#trName" + id;
            $(controlToBeRemoved).remove();
        }
        $(document).ready(function () {
            addRow();
            $(".btnSubmit").click(function () {
                $(".btnSubmit").prop("disabled", true);
                $("#frmDraftSetup").submit();
            });

            $("#frmDraftSetup").bind('invalid-form.validate', function () {
                $(".btnSubmit").prop("disabled", false);

            });

            $("#defaultDecklistIDs").change(function () {
                $("#DecklistLocator").val($("#defaultDecklistIDs option:selected").data("deckid"));
            });
        });
    </script>
</head>
<body>
    @if (Model.ServerErrorMessage.Count() > 0)
    {
        <div class="alert alert-danger" role="alert">@Model.ServerErrorMessage</div>
    }
    @using (Html.BeginForm("Index", "Create", FormMethod.Post, new { id = "frmDraftSetup" }))
    {
        @Html.ValidationSummary(true)
        @Html.AntiForgeryToken()
        <div id="createNewDraft" class="container">
            <fieldset class="form-group">
                <div class="editor-label">
                    <div class="row">
                        <div class="col-md-6">
                    @Html.LabelFor(model => model.SecretName, "Draft Name")

                        </div>
                        <div class="col-md-6">

                    @Html.ValidationMessageFor(model => model.SecretName)

                        </div>
                    </div>
                </div>
                <div class="editor-field row">
                    <div class="col-md-6">

                        @Html.TextBoxFor(model => model.SecretName, new { @placeholder = "Enter the draft name", @class = "form-control" })
                    </div>
                    <div class="col-md-6">

                        <small class="form-text"> This is the unique name for your draft, which you will use for access. Anyone with this name will have access to your draft, so keep it a secret!</small>

                    </div>
                </div>
                <div class="editor-label">
                    <div class="row">
                        <div class="col-md-6">

                    @Html.LabelFor(model => model.DecklistLocator, "Decklist ID")
                        </div>
                        <div class="col-md-6">
                    @Html.ValidationMessageFor(model => model.DecklistLocator)

                        </div>
                    </div>
                </div>
                <div class="row">

                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.DecklistLocator, new { @placeholder = "Enter the decklist ID", @class = "form-control" })
                            <select id="defaultDecklistIDs" class="form-control">
                                <option value="0" data-deckID="">Suggested Decklists</option>
                                <option value="1" data-deckID="38263">Stimhack Cube (Corp)</option>
                                <option value="2" data-deckID="38261">Stimhack Cube (Runner)</option>
                                <option value="3" data-deckID="37328">Xenasis' Cube (Corp)</option>
                                <option value="4" data-deckID="37327">Xenasis' Cube (Runner)</option>
                                <option value="5" data-deckID="38478">Hypercube (Corp)</option>
                                <option value="6" data-deckID="38479">Hypercube (Runner)</option>
                            </select>
                    </div>
                    <div class="col-md-6">
                        <small class="form-text">The decklist ID is the number in the URL when you view the deck on <a href="https://netrunnerdb.com/">netrunnerdb.com</a>. You can only use a <strong>public</strong> deck hosted on <a href="https://netrunnerdb.com/">netrunnerdb</a>, so if you want to use a decklist that you've made, make sure to publish it.</small>

                    </div>


                </div>
                <div class="row">
                    <div class="col-md-2">
                <div class="editor-label">
                    @Html.LabelFor(model => model.PackSize, "Cards per pack")
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.PackSize, new { htmlAttributes = new { @class = "form-control" } })
                </div>


                    </div>
                    <div class="col-md-2">

                <div class="editor-label">
                    @Html.LabelFor(model => model.NumRounds, "Number of rounds")
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.NumRounds, new { htmlAttributes = new { @class = "form-control" } })
                </div>

                    </div>

                    @Html.ValidationMessageFor(model => model.PackSize)
                    @Html.ValidationMessageFor(model => model.NumRounds)

                </div>
                <div class="row">
                    <div class="col-md-6">
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <td>
                                    <label>Player Name</label>
                                </td>
                                <td>
                                    <button id="btnAddName" type="button" class="btn btn-secondary btn-sm"
                                            onclick="addRow();">
                                        Add Player
                                    </button>
                                </td>
                            </tr>
                            <tr></tr>
                        </thead>
                        <tbody id="tbNames"></tbody>
                    </table>
                    </div>

                </div>
            </fieldset>
            <div>
                <button class="btnSubmit btn btn-primary" type="submit">Create!</button>
            </div>
        </div>

    }
</body>



</html>
